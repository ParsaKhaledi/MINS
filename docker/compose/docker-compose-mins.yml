version: '3.6'

services:
  # roscore:
  #   image: "mins:${minsTAG:?error}"
  #   network_mode: "host"
  #   restart: always
  #   command: /bin/bash -c " \
  #     source /opt/ros/noetic/setup.bash && \
  #     roscore"

  oak:
    image: luxonis/depthai-ros:noetic-latest
    tty: true
    privileged: true
    restart: unless-stopped
    network_mode: "host"
    # networks:
    #   mins:
    #     ipv4_address: "10.20.10.2"
    # depends_on:
      # - roscore
    environment:
      DISPLAY: ${DISPLAY}
      "XAUTHORITY": ${XAUTH}
    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/
      - /dev:/dev/
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw

    command: /bin/bash -c "
      source /ws/devel/setup.bash && roslaunch depthai_examples stereo_inertial_node.launch \
      enableRviz:=false stereo_fps:=30 syncNN:=false \
      enableSpatialDetection:=false depth_aligned:=false monoResolution:=400p \
      /stereo_inertial_publisher/imu:=/imu/data_raw"

  ublox:
    image: "ublox_ros1:v1"
    privileged: true
    restart: unless-stopped
    network_mode: "host"
    # networks:
    #   mins:
    #     ipv4_address: "10.20.10.3"
    depends_on:
      # - roscore
      - oak
    # environment:
    #   DISPLAY: ${DISPLAY}
    #   "XAUTHORITY": ${XAUTH}
    volumes:
      # - /tmp/.X11-unix/:/tmp/.X11-unix/
      # - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      # - ~/ws_docker/ws_mins/ROS2_simulator/.ros:/root/.ros
      - /dev/:/dev/
      - ~/ws_docker/ws_ublox/:/ws_ublox/
    command: /bin/bash -c "
      roslaunch ublox_gps ublox_device.launch param_file_name:=m8u_rover node_name:=gps"


  imu_filter:
    image: "mins:${minsTAG:?error}"
    privileged: true
    restart: unless-stopped
    network_mode: "host"
    # networks:
    #   mins:
    #     ipv4_address: "10.20.10.3"
    depends_on:
      # - roscore
      - oak
    # environment:
    #   DISPLAY: ${DISPLAY}
    #   "XAUTHORITY": ${XAUTH}
    volumes:
      # - /tmp/.X11-unix/:/tmp/.X11-unix/
      # - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      # - ~/ws_docker/ws_mins/ROS2_simulator/.ros:/root/.ros
      - /dev/:/dev/
      - ~/ws_docker/ws_ublox/:/ws_ublox/
    command: /bin/bash -c "
      rosrun imu_filter_madgwick imu_filter_madgwick_node "

  rviz:
    image: "mins:${minsTAG:?error}"
    tty: true
    restart: unless-stopped
    network_mode: "host"
    # networks:
    #   mins:
    #     ipv4_address: "10.20.10.4"
    depends_on:
      # - roscore
      - oak
      - mins
    environment:
      DISPLAY: ${DISPLAY}
      "XAUTHORITY": ${XAUTH}
    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/
      - ~/ws_docker/ws_mins/:/ws_mins/
    command: /bin/bash -c "
      source /opt/ros/noetic/setup.bash && \
      rviz -d /ws_mins/src/MINS/mins/launch/display.rviz"

  rqt:
    image: "mins:${minsTAG:?error}"
    tty: true
    network_mode: "host"
    # networks:
    #   mins:
    #     ipv4_address: "10.20.10.5"
    # restart: unless-stopped
    depends_on:
      # - roscore
      - oak
      - mins
    environment:
      DISPLAY: ${DISPLAY}
      "XAUTHORITY": ${XAUTH}
    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/
      - ~/ws_docker/ws_mins/:/ws_mins/
    command: /bin/bash -c "
      source /opt/ros/noetic/setup.bash && rqt"

  mins:
    image: "mins:${minsTAG:?error}"
    tty: true
    network_mode: "host"
    depends_on:
      # - roscore
      - imu_filter
      - ublox
    # networks:
    #   mins:
    #     ipv4_address: "10.20.10.6"
    restart: unless-stopped
    environment:
      DISPLAY: ${DISPLAY}
      "XAUTHORITY": ${XAUTH}

    volumes:
      - /tmp/.X11-unix/:/tmp/.X11-unix/ 
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - /home/user/ws_docker/ws_mins/:/ws_mins/
    command: /bin/bash -c "
      source /opt/ros/noetic/setup.bash && cd /ws_mins/ && \
      if [ ! -d '/ws_mins/devel' ]; then \
      catkin build; fi && source /ws_mins/devel/setup.bash && \
      roslaunch mins subscribe.launch config:=oak-d "


# networks:
#   mins:
#     ipam:
#       driver: default
#       config:
#         - subnet: "10.20.10.0/24"